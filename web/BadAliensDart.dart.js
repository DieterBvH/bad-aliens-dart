// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  }
};

$$.Null = {"": "Object;"};

$$.MetaInfo = {"": "Object;_tag>,_tags,_set>"};

$$.JSSyntaxRegExp = {"": "Object;_liblib1$_pattern,_isMultiLine,_isCaseSensitive",
  hasMatch$1: function(str) {
    return $.regExpTest(this, $.checkString(str));
  },
  get$pattern: function() {
    return this._liblib1$_pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  }
};

$$._DateImpl = {"": "Object;millisecondsSinceEpoch>,isUtc",
  operator$eq$1: function(other) {
    if (!(typeof other === "object" && other !== null && !!other.is$Date))
      return false;
    return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  operator$lt$1: function(other) {
    return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  operator$le$1: function(other) {
    return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  operator$gt$1: function(other) {
    return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  operator$ge$1: function(other) {
    return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  get$hashCode: function() {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function() {
    var t1, t2, t3, y, m, d, h, min, sec, ms;
    t1 = new $._DateImpl_toString_fourDigits();
    t2 = new $._DateImpl_toString_threeDigits();
    t3 = new $._DateImpl_toString_twoDigits();
    y = t1.call$1(this.get$year());
    m = t3.call$1(this.get$month());
    d = t3.call$1(this.get$day());
    h = t3.call$1(this.get$hour());
    min = t3.call$1(this.get$minute());
    sec = t3.call$1(this.get$second());
    ms = t2.call$1(this.get$millisecond());
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(duration) {
    var ms, t2;
    ms = this.millisecondsSinceEpoch;
    if (typeof ms !== "number")
      return this.add$1$bailout0(1, duration, ms);
    t2 = duration.get$inMilliseconds();
    if (typeof t2 !== "number")
      return this.add$1$bailout0(2, ms, t2);
    return $.Date_Date$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
  },
  add$1$bailout0: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        ms = env1;
        duration = env0;
        break;
      case 2:
        t2 = env1;
        ms = env0;
        break;
    }
    switch (state0) {
      case 0:
        ms = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t2 = duration.get$inMilliseconds();
      case 2:
        var ms, duration, t2;
        state0 = 0;
        return $.Date_Date$fromMillisecondsSinceEpoch($.add(ms, t2), this.isUtc);
    }
  },
  get$year: function() {
    return $.Primitives_getYear(this);
  },
  get$month: function() {
    return $.Primitives_getMonth(this);
  },
  get$day: function() {
    return $.Primitives_getDay(this);
  },
  get$hour: function() {
    return $.Primitives_getHours(this);
  },
  get$minute: function() {
    return $.Primitives_getMinutes(this);
  },
  get$second: function() {
    return $.Primitives_getSeconds(this);
  },
  get$millisecond: function() {
    return $.Primitives_getMilliseconds(this);
  },
  _DateImpl$now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  _DateImpl$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
    var t1 = this.millisecondsSinceEpoch;
    if ($.gtB($.getInterceptor$JSNumber(t1).abs$0(t1), 8640000000000000))
      throw $.$$throw($.ArgumentError$(t1));
    t1 = this.isUtc;
    if (t1 == null)
      throw $.$$throw($.ArgumentError$(t1));
  },
  is$Date: true
};

$$.NullThrownError = {"": "Object;",
  toString$0: function() {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (!(t1 == null))
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function() {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function() {
    var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
    t1 = {};
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    t1.i_1 = 0;
    t2 = this._arguments;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
      return this.toString$0$bailout(1, t1, t2);
    for (; $.ltB(t1.i_1, t2.length); t1.i_1 = $.add(t1.i_1, 1)) {
      if ($.gtB(t1.i_1, 0)) {
        t3 = t1.sb_0;
        $.getInterceptor$JSArray(t3).add$1(t3, ", ");
      }
      t3 = t1.sb_0;
      t4 = $.getInterceptor$JSArray(t3);
      t5 = t1.i_1;
      if (t5 !== (t5 | 0))
        throw $.iae(t5);
      if (t5 < 0 || t5 >= t2.length)
        throw $.ioore(t5);
      t4.add$1(t3, $.Error_safeToString(t2[t5]));
    }
    t2 = this._namedArguments;
    if (!(t2 == null))
      $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
      return this.toString$0$bailout(2, t1, t2);
    t3 = t1.sb_0;
    actualParameters = $.getInterceptor(t3).toString$0(t3);
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    for (i = 0; i < t2.length; ++i) {
      if (i > 0) {
        t3 = t1.sb_0;
        $.getInterceptor$JSArray(t3).add$1(t3, ", ");
      }
      t3 = t1.sb_0;
      t4 = $.getInterceptor$JSArray(t3);
      if (i >= t2.length)
        throw $.ioore(i);
      t4.add$1(t3, t2[i]);
    }
    t1 = t1.sb_0;
    formalParameters = $.getInterceptor(t1).toString$0(t1);
    t1 = this._memberName;
    return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
  },
  toString$0$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        t2 = env1;
        t1 = env0;
        break;
      case 2:
        t2 = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = {};
        t1.sb_0 = $.StringBuffer_StringBuffer("");
        t1.i_1 = 0;
        t2 = this._arguments;
      case 1:
        state0 = 0;
        if (!(t2 == null))
          for (t3 = $.getInterceptor$JSStringJSArray(t2); $.ltB(t1.i_1, t3.get$length(t2)); t1.i_1 = $.add(t1.i_1, 1)) {
            if ($.gtB(t1.i_1, 0)) {
              t4 = t1.sb_0;
              $.getInterceptor$JSArray(t4).add$1(t4, ", ");
            }
            t4 = t1.sb_0;
            $.getInterceptor$JSArray(t4).add$1(t4, $.Error_safeToString(t3.operator$index$1(t2, t1.i_1)));
          }
        t2 = this._namedArguments;
        if (!(t2 == null))
          $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
        t2 = this._existingArgumentNames;
      case 2:
        var t1, t2, t3, t4, actualParameters, i, formalParameters;
        state0 = 0;
        if (t2 == null)
          return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
        else {
          t3 = t1.sb_0;
          actualParameters = $.getInterceptor(t3).toString$0(t3);
          t1.sb_0 = $.StringBuffer_StringBuffer("");
          for (t3 = $.getInterceptor$JSStringJSArray(t2), i = 0; $.ltB(i, t3.get$length(t2)); ++i) {
            if (i > 0) {
              t4 = t1.sb_0;
              $.getInterceptor$JSArray(t4).add$1(t4, ", ");
            }
            t4 = t1.sb_0;
            $.getInterceptor$JSArray(t4).add$1(t4, t3.operator$index$1(t2, i));
          }
          t1 = t1.sb_0;
          formalParameters = $.getInterceptor(t1).toString$0(t1);
          t1 = this._memberName;
          return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
        }
    }
  }
};

$$.UnsupportedError = {"": "Object;message",
  toString$0: function() {
    return "Unsupported operation: " + this.message;
  }
};

$$.StateError = {"": "Object;message",
  toString$0: function() {
    return "Bad state: " + this.message;
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function() {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function() {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  }
};

$$.IllegalJSRegExpException = {"": "Object;_pattern,_errmsg",
  toString$0: function() {
    return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
  }
};

$$.Iterable = {"": "Object;",
  forEach$1: function(f) {
    var t1;
    for (t1 = $.getInterceptor$JSArray(this).get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  get$length: function() {
    var it, count;
    it = this.get$iterator();
    for (count = 0; it.moveNext$0() === true;)
      ++count;
    return count;
  },
  get$isEmpty: function() {
    return this.get$iterator().moveNext$0() !== true;
  }
};

$$._HashMapImpl = {"": "Object;_keys>,_values>,_loadLimit,_numberOfEntries,_numberOfDeleted",
  _probeForAdding$1: function(key) {
    var t1, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.getInterceptor(key).get$hashCode(key);
    if (t1 !== (t1 | 0))
      return this._probeForAdding$1$bailout(1, key, t1);
    hash = (t1 & this._keys.length - 1) >>> 0;
    for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null) {
        if (insertionIndex < 0)
          return hash;
        return insertionIndex;
      } else if ($.eqB(existingKey, key))
        return hash;
      else if (insertionIndex < 0 && $.Primitives_identical(existingKey, $.CONSTANT3))
        insertionIndex = hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
      if (hash !== (hash | 0))
        return this._probeForAdding$1$bailout(2, key, insertionIndex, hash, numberOfProbes0);
    }
  },
  _probeForAdding$1$bailout: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        t1 = env1;
        key = env0;
        break;
      case 2:
        numberOfProbes0 = env3;
        hash = env2;
        insertionIndex = env1;
        key = env0;
        break;
    }
    switch (state0) {
      case 0:
        if (key == null)
          throw $.$$throw($.ArgumentError$(null));
        t1 = $.getInterceptor(key).get$hashCode(key);
      case 1:
        state0 = 0;
        hash = $.and(t1, this._keys.length - 1);
        numberOfProbes = 1;
        insertionIndex = -1;
      case 2:
        var t1, key, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!true)
                  break L0;
                t1 = this._keys;
                if (hash !== (hash | 0))
                  throw $.iae(hash);
                if (hash < 0 || hash >= t1.length)
                  throw $.ioore(hash);
                existingKey = t1[hash];
                if (existingKey == null) {
                  if (insertionIndex < 0)
                    return hash;
                  return insertionIndex;
                } else if ($.eqB(existingKey, key))
                  return hash;
                else if (insertionIndex < 0 && $.Primitives_identical(existingKey, $.CONSTANT3))
                  insertionIndex = hash;
                numberOfProbes0 = numberOfProbes + 1;
                hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
              case 2:
                state0 = 0;
                numberOfProbes = numberOfProbes0;
            }
    }
  },
  _probeForLookup$1: function(key) {
    var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    hash = $.and($.getInterceptor(key).get$hashCode(key), this._keys.length - 1);
    if (hash !== (hash | 0))
      return this._probeForLookup$1$bailout(1, key, hash);
    for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.eqB(existingKey, key))
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _probeForLookup$1$bailout: function(state0, key, hash) {
    var numberOfProbes, t1, existingKey, numberOfProbes0;
    for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.eqB(existingKey, key))
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _ensureCapacity$0: function() {
    var newNumberOfEntries, capacity, numberOfFreeOrDeleted, t1;
    newNumberOfEntries = $.add(this._numberOfEntries, 1);
    if ($.geB(newNumberOfEntries, this._loadLimit)) {
      this._grow$1(this._keys.length * 2);
      return;
    }
    capacity = this._keys.length;
    if (typeof newNumberOfEntries !== "number")
      throw $.iae(newNumberOfEntries);
    numberOfFreeOrDeleted = capacity - newNumberOfEntries;
    t1 = this._numberOfDeleted;
    if (t1 > numberOfFreeOrDeleted - t1)
      this._grow$1(capacity);
  },
  _grow$1: function(newCapacity) {
    var capacity, oldKeys, oldValues, i, key, value, newIndex, t1;
    capacity = this._keys.length;
    this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
    oldKeys = this._keys;
    oldValues = this._values;
    this._keys = $.List_List$fixedLength(newCapacity, null);
    this._values = $.List_List$fixedLength(newCapacity, null);
    for (i = 0; i < capacity; ++i) {
      if (i >= oldKeys.length)
        throw $.ioore(i);
      key = oldKeys[i];
      if (key == null || $.Primitives_identical(key, $.CONSTANT3))
        continue;
      if (i >= oldValues.length)
        throw $.ioore(i);
      value = oldValues[i];
      newIndex = this._probeForAdding$1(key);
      t1 = this._keys;
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = key;
      t1 = this._values;
      if (newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = value;
    }
    this._numberOfDeleted = 0;
  },
  clear$0: function() {
    var t1, length$, t2, t3, i;
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    t1 = this._keys;
    length$ = t1.length;
    for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
      t1[i] = null;
      if (i >= t3)
        throw $.ioore(i);
      t2[i] = null;
    }
  },
  operator$indexSet$2: function(key, value) {
    var index, t1;
    this._ensureCapacity$0();
    index = this._probeForAdding$1(key);
    t1 = this._keys;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    t1 = t1[index];
    if (t1 == null || $.Primitives_identical(t1, $.CONSTANT3))
      this._numberOfEntries = $.add(this._numberOfEntries, 1);
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = key;
    t1 = this._values;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = value;
  },
  operator$index$1: function(key) {
    var index, t1;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.operator$index$1$bailout(1, index);
    if (index < 0)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  operator$index$1$bailout: function(state0, index) {
    var t1;
    if ($.ltB(index, 0))
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  get$isEmpty: function() {
    return $.eq(this._numberOfEntries, 0);
  },
  get$length: function() {
    return this._numberOfEntries;
  },
  forEach$1: function(f) {
    var it, t1, t2, t3;
    it = $._HashMapImplIndexIterator$(this);
    for (; it.moveNext$0() === true;) {
      t1 = this._keys;
      t2 = it.get$current();
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t2 = t1[t2];
      t1 = this._values;
      t3 = it.get$current();
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      f.call$2(t2, t1[t3]);
    }
  },
  containsKey$1: function(key) {
    return !$.eqB(this._probeForLookup$1(key), -1);
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _HashMapImpl$0: function() {
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
    this._keys = $.List_List$fixedLength(8, null);
    this._values = $.List_List$fixedLength(8, null);
  },
  is$Map: function() {
    return true;
  }
};

$$._HashMapImplIterator = {"": "Object;",
  moveNext$0: function() {
    var t1, length$, t2, newIndex, key;
    t1 = this._map;
    length$ = t1._keys.length;
    t2 = this._index;
    if (t2 !== (t2 | 0))
      return this.moveNext$0$bailout1(1, length$, t2, t1);
    newIndex = t2 + 1;
    for (; newIndex < length$;) {
      t2 = t1._keys;
      if (newIndex < 0 || newIndex >= t2.length)
        throw $.ioore(newIndex);
      key = t2[newIndex];
      if (!(key == null) && !$.Primitives_identical(key, $.CONSTANT3)) {
        this._liblib0$_current = this._computeCurrentFromIndex$3(newIndex, t1._keys, t1._values);
        this._index = newIndex;
        return true;
      }
      ++newIndex;
    }
    this._index = length$;
    this._liblib0$_current = null;
    return false;
  },
  moveNext$0$bailout1: function(state0, length$, t2, t1) {
    var newIndex, key;
    newIndex = $.add(t2, 1);
    for (; $.ltB(newIndex, length$);) {
      t2 = t1._keys;
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t2.length)
        throw $.ioore(newIndex);
      key = t2[newIndex];
      if (!(key == null) && !$.Primitives_identical(key, $.CONSTANT3)) {
        this._liblib0$_current = this._computeCurrentFromIndex$3(newIndex, t1._keys, t1._values);
        this._index = newIndex;
        return true;
      }
      ++newIndex;
    }
    this._index = length$;
    this._liblib0$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$._HashMapImplIndexIterator = {"": "_HashMapImplIterator;_map,_index,_liblib0$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return index;
  }
};

$$._DeletedKeySentinel = {"": "Object;"};

$$._KeyValuePair = {"": "Object;key>,value="};

$$._LinkedHashMapImpl = {"": "Object;_liblib0$_list,_map",
  operator$indexSet$2: function(key, value) {
    var t1;
    if (this._map.containsKey$1(key) === true) {
      t1 = this._map;
      $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key).get$element().set$value(value);
    } else {
      this._liblib0$_list.addLast$1($._KeyValuePair$(key, value));
      $.indexSet(this._map, key, this._liblib0$_list.lastEntry$0());
    }
  },
  operator$index$1: function(key) {
    var t1, entry;
    t1 = this._map;
    entry = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key);
    if (entry == null)
      return;
    return entry.get$element().get$value();
  },
  forEach$1: function(f) {
    this._liblib0$_list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
  },
  containsKey$1: function(key) {
    return this._map.containsKey$1(key);
  },
  get$length: function() {
    var t1 = this._map;
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  },
  get$isEmpty: function() {
    return $.eq(this.get$length(), 0);
  },
  clear$0: function() {
    var t1 = this._map;
    $.getInterceptor$JSArray(t1).clear$0(t1);
    this._liblib0$_list.clear$0();
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _LinkedHashMapImpl$0: function() {
    this._map = $.HashMap_HashMap();
    this._liblib0$_list = $.DoubleLinkedQueue$();
  },
  is$Map: function() {
    return true;
  }
};

$$.Object = {"": ";",
  operator$eq$1: function(other) {
    return $.Primitives_identical(this, other);
  },
  get$hashCode: function() {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function() {
    return $.Primitives_objectToString(this);
  }
};

$$.DoubleLinkedQueueEntry = {"": "Object;_previous=,_next=,_element",
  _link$2: function(p, n) {
    this._next = n;
    this._previous = p;
    p.set$_next(this);
    n.set$_previous(this);
  },
  prepend$1: function(e) {
    $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
  },
  remove$0: function() {
    var t1 = this._next;
    this._previous.set$_next(t1);
    t1 = this._previous;
    this._next.set$_previous(t1);
    this._next = null;
    this._previous = null;
    return this._element;
  },
  _asNonSentinelEntry$0: function() {
    return this;
  },
  previousEntry$0: function() {
    return this._previous._asNonSentinelEntry$0();
  },
  get$element: function() {
    return this._element;
  },
  DoubleLinkedQueueEntry$1: function(e) {
    this._element = e;
  }
};

$$._DoubleLinkedQueueEntrySentinel = {"": "DoubleLinkedQueueEntry;_previous,_next,_element",
  remove$0: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _asNonSentinelEntry$0: function() {
    return;
  },
  get$element: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _DoubleLinkedQueueEntrySentinel$0: function() {
    this._link$2(this, this);
  }
};

$$.DoubleLinkedQueue = {"": "Iterable;_sentinel",
  addLast$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  add$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  removeLast$0: function() {
    return this._sentinel._previous.remove$0();
  },
  lastEntry$0: function() {
    return this._sentinel.previousEntry$0();
  },
  get$isEmpty: function() {
    var t1 = this._sentinel;
    return t1._next === t1;
  },
  clear$0: function() {
    var t1 = this._sentinel;
    t1._next = t1;
    t1 = this._sentinel;
    t1._previous = t1;
  },
  get$iterator: function() {
    return $._DoubleLinkedQueueIterator$(this._sentinel);
  },
  toString$0: function() {
    return $.Collections_collectionToString(this);
  },
  DoubleLinkedQueue$0: function() {
    this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
  },
  is$Collection: function() {
    return true;
  }
};

$$._DoubleLinkedQueueIterator = {"": "Object;_sentinel,_currentEntry,_liblib0$_current",
  moveNext$0: function() {
    var t1 = this._currentEntry;
    if (t1 == null)
      return false;
    this._currentEntry = t1.get$_next();
    if ($.Primitives_identical(this._currentEntry, this._sentinel)) {
      this._currentEntry = null;
      this._liblib0$_current = null;
      this._sentinel = null;
      return false;
    }
    this._liblib0$_current = this._currentEntry.get$element();
    return true;
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$._StringBufferImpl = {"": "Object;_buffer,_liblib0$_length",
  get$length: function() {
    return this._liblib0$_length;
  },
  get$isEmpty: function() {
    return $.eq(this._liblib0$_length, 0);
  },
  add$1: function(obj) {
    var str, t1;
    str = $.getInterceptor(obj).toString$0(obj);
    if (!(typeof str === "string"))
      throw $.$$throw($.ArgumentError$("toString() did not return a string"));
    if ($.CONSTANT0.get$isEmpty(str) === true)
      return;
    t1 = this._buffer;
    $.getInterceptor$JSArray(t1).add$1(t1, str);
    t1 = this._liblib0$_length;
    if (typeof t1 !== "number")
      return this.add$1$bailout(1, t1, str);
    this._liblib0$_length = t1 + str.length;
  },
  add$1$bailout: function(state0, t1, str) {
    this._liblib0$_length = $.add(t1, str.length);
  },
  clear$0: function() {
    this._buffer = $.List_List(0);
    this._liblib0$_length = 0;
  },
  toString$0: function() {
    var t1, result;
    t1 = this._buffer;
    if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
      return "";
    t1 = this._buffer;
    if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1)) {
      t1 = this._buffer;
      return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, 0);
    }
    result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), "");
    t1 = this._buffer;
    $.getInterceptor$JSArray(t1).clear$0(t1);
    t1 = this._buffer;
    $.getInterceptor$JSArray(t1).add$1(t1, result);
    return result;
  },
  _StringBufferImpl$1: function(content$) {
    this.clear$0();
    this.add$1(content$);
  }
};

$$.ObjectInterceptor = {"": "Object;",
  get$length: function(receiver) {
    return receiver.get$length();
  },
  add$1: function(receiver, a0) {
    return receiver.add$1(a0);
  },
  charCodeAt$1: function(receiver, a0) {
    return receiver.charCodeAt$1(a0);
  },
  get$iterator: function(receiver) {
    return receiver.get$iterator();
  },
  substring$1: function(receiver, a0) {
    return receiver.substring$1(a0);
  },
  replaceAll$2: function(receiver, a0, a1) {
    return receiver.replaceAll$2(a0, a1);
  },
  toString$0: function(receiver) {
    return receiver.toString$0();
  },
  operator$index$1: function(receiver, a0) {
    return receiver.operator$index$1(a0);
  },
  removeRange$2: function(receiver, a0, a1) {
    return receiver.removeRange$2(a0, a1);
  },
  get$isNaN: function(receiver) {
    return receiver.get$isNaN();
  },
  endsWith$1: function(receiver, a0) {
    return receiver.endsWith$1(a0);
  },
  get$isNegative: function(receiver) {
    return receiver.get$isNegative();
  },
  clear$0: function(receiver) {
    return receiver.clear$0();
  },
  set$length: function(receiver, value) {
    return receiver.set$length(value);
  },
  truncate$0: function(receiver) {
    return receiver.truncate$0();
  },
  forEach$1: function(receiver, a0) {
    return receiver.forEach$1(a0);
  },
  abs$0: function(receiver) {
    return receiver.abs$0();
  },
  floor$0: function(receiver) {
    return receiver.floor$0();
  },
  addLast$1: function(receiver, a0) {
    return receiver.addLast$1(a0);
  },
  get$isEmpty: function(receiver) {
    return receiver.get$isEmpty();
  },
  get$hashCode: function(receiver) {
    return receiver.get$hashCode();
  },
  removeLast$0: function(receiver) {
    return receiver.removeLast$0();
  },
  ceil$0: function(receiver) {
    return receiver.ceil$0();
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  }
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  is$bool: true
};

$$.JSNull = {"": "Object;",
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  addLast$1: function(receiver, value) {
    $.checkGrowable(receiver, "addLast");
    receiver.push(value);
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  forEach$1: function(receiver, f) {
    return $.Collections_forEach(receiver, f);
  },
  removeRange$2: function(receiver, start, length$) {
    var receiverLength, t1, t2;
    $.checkGrowable(receiver, "removeRange");
    if (length$ === 0)
      return;
    $.checkNull(start);
    $.checkNull(length$);
    if (length$ < 0)
      throw $.$$throw($.ArgumentError$(length$));
    receiverLength = receiver.length;
    if (start < 0 || start >= receiverLength)
      throw $.$$throw($.RangeError$value(start));
    t1 = start + length$;
    if (t1 > receiverLength)
      throw $.$$throw($.RangeError$value(t1));
    t2 = receiverLength - length$;
    $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
    $.CONSTANT1.set$length(receiver, t2);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.Collections_collectionToString(receiver);
  },
  get$iterator: function(receiver) {
    return $._ArrayIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  operator$index$1: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  }
};

$$._ArrayIterator = {"": "Object;_list,_liblib$_position,_liblib$_current",
  get$current: function() {
    return this._liblib$_current;
  },
  moveNext$0: function() {
    var t1, nextPosition, length$;
    t1 = this._liblib$_position;
    if (t1 !== (t1 | 0))
      return this.moveNext$0$bailout0(1, t1);
    nextPosition = t1 + 1;
    t1 = this._list;
    length$ = t1.length;
    if (nextPosition < length$) {
      this._liblib$_position = nextPosition;
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib$_current = t1[nextPosition];
      return true;
    }
    this._liblib$_position = length$;
    this._liblib$_current = null;
    return false;
  },
  moveNext$0$bailout0: function(state0, t1) {
    var nextPosition, length$;
    nextPosition = $.add(t1, 1);
    t1 = this._list;
    length$ = t1.length;
    if ($.ltB(nextPosition, length$)) {
      this._liblib$_position = nextPosition;
      if (nextPosition !== (nextPosition | 0))
        throw $.iae(nextPosition);
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib$_current = t1[nextPosition];
      return true;
    }
    this._liblib$_position = length$;
    this._liblib$_current = null;
    return false;
  }
};

$$.JSNumber = {"": "Object;",
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  ceil$0: function(receiver) {
    return Math.ceil(receiver);
  },
  floor$0: function(receiver) {
    return Math.floor(receiver);
  },
  truncate$0: function(receiver) {
    return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 536870911;
  }
};

$$.JSInt = {"": "JSNumber;"};

$$.JSDouble = {"": "JSNumber;"};

$$.JSString = {"": "Object;",
  charCodeAt$1: function(receiver, index) {
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    if ($.ltB(startIndex, 0))
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.gtB(startIndex, endIndex))
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.gtB(endIndex, receiver.length))
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var i, hash, hash0, hash1;
    for (i = 0, hash = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  operator$index$1: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  is$String: true
};

$$.AssetManager = {"": "Object;successCount=,errorCount=,cache,downloadQueue>",
  queueDownload$1: function(path) {
    this.downloadQueue.push(path);
  },
  downloadAll$1: function(downloadCallback) {
    var t1, t2, t3, img, t4;
    t1 = this.downloadQueue;
    if (t1.length === 0)
      downloadCallback.call$0();
    t1 = $.CONSTANT1.get$iterator(t1);
    t2 = this.cache;
    if (typeof t2 !== "object" || t2 === null || (t2.constructor !== Array || !!t2.immutable$list) && !t2.is$JavaScriptIndexingBehavior())
      return this.downloadAll$1$bailout(1, downloadCallback, t1, t2);
    for (; t1.moveNext$0() === true;) {
      t3 = t1.get$current();
      img = $.ImageElement_ImageElement(null, null, null);
      t4 = img.get$on().get$load();
      $.getInterceptor$JSArray(t4).add$1(t4, new $.AssetManager_downloadAll_anon(this, downloadCallback, img));
      t4 = img.get$on().get$error();
      $.getInterceptor$JSArray(t4).add$1(t4, new $.AssetManager_downloadAll_anon0(this, downloadCallback));
      img.set$src(t3);
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t2.length)
        throw $.ioore(t3);
      t2[t3] = img;
    }
  },
  downloadAll$1$bailout: function(state0, downloadCallback, t1, t2) {
    var t3, img, t4;
    for (; t1.moveNext$0() === true;) {
      t3 = t1.get$current();
      img = $.ImageElement_ImageElement(null, null, null);
      t4 = img.get$on().get$load();
      $.getInterceptor$JSArray(t4).add$1(t4, new $.AssetManager_downloadAll_anon(this, downloadCallback, img));
      t4 = img.get$on().get$error();
      $.getInterceptor$JSArray(t4).add$1(t4, new $.AssetManager_downloadAll_anon0(this, downloadCallback));
      img.set$src(t3);
      $.indexSet(t2, t3, img);
    }
  },
  getAsset$1: function(path) {
    var t1 = this.cache;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, path);
  },
  isDone$0: function() {
    return this.downloadQueue.length === $.add(this.successCount, this.errorCount);
  }
};

$$.Animation = {"": "Object;spriteSheet,frameWidth>,frameHeight,frameDuration,totalTime,loop,elapsedTime",
  drawFrame$5: function(tick, ctx, x, y, scaleBy) {
    var t1, t2, index, t3, locX, locY;
    t1 = this.elapsedTime;
    if (typeof tick !== "number")
      throw $.iae(tick);
    this.elapsedTime = t1 + tick;
    if (this.loop === true) {
      if ($.geB(this.elapsedTime, this.totalTime))
        this.elapsedTime = 0;
    } else if ($.geB(this.elapsedTime, this.totalTime))
      return;
    t1 = this.elapsedTime;
    t2 = this.frameDuration;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    index = $.CONSTANT6.floor$0(t1 / t2);
    t3 = this.frameWidth;
    locX = $.sub(x, $.mul($.div(t3, 2), scaleBy));
    locY = $.sub(y, $.mul($.div(this.frameHeight, 2), scaleBy));
    ctx.drawImage$9(this.spriteSheet, $.mul(index, t3), 0, t3, this.frameHeight, locX, locY, $.mul(t3, scaleBy), $.mul(this.frameHeight, scaleBy));
  },
  drawFrame$4: function(tick, ctx, x, y) {
    return this.drawFrame$5(tick, ctx, x, y, 1);
  },
  isDone$0: function() {
    return $.ge(this.elapsedTime, this.totalTime);
  },
  currentFrame$0: function() {
    var t1, t2;
    t1 = this.elapsedTime;
    t2 = this.frameDuration;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    return $.CONSTANT6.floor$0(t1 / t2);
  },
  Animation$4$loop: function(spriteSheet, frameWidth, frameDuration, loop) {
    var t1 = this.spriteSheet;
    this.frameHeight = t1.get$height();
    this.totalTime = $.mul($.div(t1.get$width(), this.frameWidth), this.frameDuration);
  }
};

$$.Timer = {"": "Object;gameTime,wallLastTimestamp",
  tick$0: function() {
    var wallCurrent, wallDelta, gameDelta;
    wallCurrent = $.Date_Date$now().get$millisecondsSinceEpoch();
    wallDelta = $.div($.sub(wallCurrent, this.wallLastTimestamp), 1000);
    this.wallLastTimestamp = wallCurrent;
    gameDelta = $.min(wallDelta, 0.05);
    this.gameTime = this.gameTime + gameDelta;
    return gameDelta;
  }
};

$$.GameEntity = {"": "Object;x>,y>,removeFromWorld>",
  update$0: function() {
  },
  draw$1: function(ctx) {
    if (this.game.get$showOutlines() === true) {
      ctx.beginPath$0();
      ctx.set$strokeStyle("green");
      ctx.arc$6(this.x, this.y, this.radius, 0, 6.283185307179586, false);
      ctx.stroke$0();
      ctx.closePath$0();
    }
  },
  drawSpriteCentered$1: function(ctx) {
    var _x, _y;
    _x = $.sub(this.x, $.div(this.sprite.get$width(), 2));
    _y = $.sub(this.y, $.div(this.sprite.get$height(), 2));
    ctx.drawImage$3(this.sprite, _x, _y);
  },
  outsideScreen$0: function() {
    var t1, t2;
    t1 = this.x;
    t2 = this.game;
    return $.gtB(t1, t2.get$halfSurfaceWidth()) || $.ltB(this.x, $.neg(t2.get$halfSurfaceWidth())) || $.gtB(this.y, t2.get$halfSurfaceHeight()) || $.ltB(this.y, $.neg(t2.get$halfSurfaceHeight()));
  },
  rotateAndCache$2: function(image, angle) {
    var offscreenCanvas, size, offscreenCtx, t1;
    offscreenCanvas = $.CanvasElement_CanvasElement(null, null);
    size = $.max(image.get$width(), image.get$height());
    offscreenCanvas.set$width(size);
    offscreenCanvas.set$height(size);
    offscreenCtx = offscreenCanvas.getContext$1("2d");
    offscreenCtx.save$0();
    t1 = size / 2;
    offscreenCtx.translate$2(t1, t1);
    offscreenCtx.rotate$1($.add(angle, 1.5707963267948966));
    offscreenCtx.translate$2(0, 0);
    offscreenCtx.drawImage$3(image, $.neg($.div(image.get$width(), 2)), $.neg($.div(image.get$height(), 2)));
    offscreenCtx.restore$0();
    return offscreenCanvas;
  }
};

$$.Game = {"": "Object;entities>,ctx>,click=,mouse=,clockTick>,halfSurfaceWidth>,halfSurfaceHeight>,clientBoundingRect>,assetManager>,showOutlines>",
  init$1: function(_ctx) {
    var rect;
    this.ctx = _ctx;
    this.surfaceWidth = this.ctx.get$canvas().get$width();
    this.surfaceHeight = this.ctx.get$canvas().get$height();
    this.halfSurfaceWidth = $.div(this.surfaceWidth, 2);
    this.halfSurfaceHeight = $.div(this.surfaceHeight, 2);
    rect = this.ctx.get$canvas().getBoundingClientRect$0();
    this.clientBoundingRect = $.GamePoint$(rect.get$left(), rect.get$top());
    this.startInput$0();
    $.print("game initialized");
  },
  start$0: function() {
    $.print("starting game");
    $.window().requestAnimationFrame$1(this.get$loop());
  },
  loop$1: function(time) {
    this.clockTick = this.timer.tick$0();
    this.update$0();
    this.draw$0();
    this.click = null;
    $.window().requestAnimationFrame$1(this.get$loop());
  },
  get$loop: function() {
    return new $.BoundClosure(this, "loop$1");
  },
  startInput$0: function() {
    var t1, t2;
    $.print("Starting input");
    t1 = new $.Game_startInput_getXandY(this);
    t2 = this.ctx.get$canvas().get$on().get$click();
    $.getInterceptor$JSArray(t2).add$1(t2, new $.Game_startInput_anon(this, t1));
    t2 = this.ctx.get$canvas().get$on().get$mouseMove();
    $.getInterceptor$JSArray(t2).add$1(t2, new $.Game_startInput_anon0(this, t1));
    $.print("Input started");
  },
  addEntity$1: function(entity) {
    this.entities.push(entity);
  },
  draw$0: function() {
    var t1 = this.ctx;
    t1.clearRect$4(0, 0, t1.get$canvas().get$width(), this.ctx.get$canvas().get$height());
    this.ctx.save$0();
    t1 = this.ctx;
    t1.translate$2($.div(t1.get$canvas().get$width(), 2), $.div(this.ctx.get$canvas().get$height(), 2));
    for (t1 = $.CONSTANT1.get$iterator(this.entities); t1.moveNext$0() === true;)
      t1.get$current().draw$1(this.ctx);
    this.drawBeforeCtxRestore$0();
    this.ctx.restore$0();
  },
  drawBeforeCtxRestore$0: function() {
  },
  update$0: function() {
    var t1, entitiesCount, i, entity;
    t1 = this.entities;
    entitiesCount = t1.length;
    for (i = 0; i < entitiesCount; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      entity = t1[i];
      if (entity.get$removeFromWorld() !== true)
        entity.update$0();
    }
    for (i = t1.length - 1; i >= 0; --i) {
      if (i >= t1.length)
        throw $.ioore(i);
      if (t1[i].get$removeFromWorld() === true)
        $.CONSTANT1.removeRange$2(t1, i, 1);
    }
  }
};

$$.GamePoint = {"": "Object;x>,y>"};

$$.Alien = {"": "GameEntity;radialDistance,angle,speed,game,x,y,removeFromWorld,sprite,radius",
  setCoords$0: function() {
    this.x = $.mul(this.radialDistance, $.cos(this.angle));
    this.y = $.mul(this.radialDistance, $.sin(this.angle));
  },
  update$0: function() {
    var t1, t3, t5, t7, t8, t9;
    t1 = this.radialDistance;
    if (typeof t1 !== "number")
      return this.update$0$bailout3(1, t1);
    this.x = t1 * $.cos(this.angle);
    t3 = this.radialDistance;
    if (typeof t3 !== "number")
      return this.update$0$bailout3(2, t3);
    this.y = t3 * $.sin(this.angle);
    t5 = this.radialDistance;
    if (typeof t5 !== "number")
      return this.update$0$bailout3(3, t5);
    t7 = this.speed;
    t8 = this.game;
    t9 = t8.get$clockTick();
    if (typeof t9 !== "number")
      throw $.iae(t9);
    this.radialDistance = t5 - t7 * t9;
    if (this.hitPlanet$0() === true) {
      this.removeFromWorld = true;
      t1 = t8.get$lives();
      if (typeof t1 !== "number")
        return this.update$0$bailout3(4, t1, t8);
      t8.set$lives(t1 - 1);
    }
  },
  update$0$bailout3: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        t1 = env0;
        break;
      case 2:
        t3 = env0;
        break;
      case 3:
        t5 = env0;
        break;
      case 4:
        t8 = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this.radialDistance;
      case 1:
        state0 = 0;
        this.x = $.mul(t1, $.cos(this.angle));
        t3 = this.radialDistance;
      case 2:
        state0 = 0;
        this.y = $.mul(t3, $.sin(this.angle));
        t5 = this.radialDistance;
      case 3:
        state0 = 0;
        t7 = this.speed;
        t8 = this.game;
        t9 = t8.get$clockTick();
        if (typeof t9 !== "number")
          throw $.iae(t9);
        this.radialDistance = $.sub(t5, t7 * t9);
      case 4:
        var t1, t3, t5, t7, t8, t9;
        if (state0 === 4 || state0 === 0 && this.hitPlanet$0() === true)
          switch (state0) {
            case 0:
              this.removeFromWorld = true;
              t1 = t8.get$lives();
            case 4:
              state0 = 0;
              t8.set$lives($.sub(t1, 1));
          }
    }
  },
  draw$1: function(ctx) {
    this.drawSpriteCentered$1(ctx);
    $.GameEntity.prototype.draw$1.call(this, ctx);
  },
  hitPlanet$0: function() {
    var t1, t2;
    t1 = this.x;
    t1 = $.mul(t1, t1);
    t2 = this.y;
    return $.lt($.add(t1, $.mul(t2, t2)), $.mul($.add(this.radius, 67), $.add(this.radius, 67)));
  },
  explode$0: function() {
    this.removeFromWorld = true;
    var t1 = this.game;
    t1.addEntity$1($.AlienExplosion$(t1, this.x, this.y));
  },
  Alien$3: function(game, radialDistance, angle) {
    this.sprite = this.rotateAndCache$2(game.get$assetManager().getAsset$1("img/alien.png"), this.angle);
    this.radius = $.div(this.sprite.get$height(), 2);
    this.setCoords$0();
  },
  is$Alien: true
};

$$.AlienExplosion = {"": "GameEntity;animation,game,x,y,removeFromWorld,sprite,radius",
  update$0: function() {
    if (this.animation.isDone$0() === true)
      this.removeFromWorld = true;
  },
  draw$1: function(ctx) {
    $.GameEntity.prototype.draw$1.call(this, ctx);
    this.animation.drawFrame$4(this.game.get$clockTick(), ctx, this.x, this.y);
  },
  AlienExplosion$3: function(game, x, y) {
    this.animation = $.Animation$(game.get$assetManager().getAsset$1("img/alien-explosion.png"), 69, 0.05, false);
    this.radius = $.div(this.animation.frameWidth, 2);
  }
};

$$.Sentry = {"": "GameEntity;angle,game,x,y,removeFromWorld,sprite,radius",
  update$0: function() {
    var t1, t2;
    t1 = this.game;
    t2 = t1.get$mouse();
    if (!(t2 == null)) {
      this.angle = $.atan2(t2.get$y(), t2.get$x());
      t2 = this.angle;
      if (typeof t2 !== "number")
        return this.update$0$bailout(1, t2, t1);
      if (t2 < 0)
        this.angle = t2 + 6.283185307179586;
      this.x = $.cos(this.angle) * 85;
      this.y = $.sin(this.angle) * 85;
    }
    if (!(t1.get$click() == null))
      t1.addEntity$1($.Bullet$(t1, this.x, this.y, this.angle, t1.get$click()));
  },
  update$0$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        t1 = env1;
        t2 = env0;
        break;
      case 2:
        t2 = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this.game;
        t2 = t1.get$mouse();
      default:
        var t1, t2;
        if (state0 === 2 || state0 === 1 || state0 === 0 && !(t2 == null))
          switch (state0) {
            case 0:
              this.angle = $.atan2(t2.get$y(), t2.get$x());
              t2 = this.angle;
            case 1:
              state0 = 0;
            case 2:
              if (state0 === 2 || state0 === 0 && $.ltB(t2, 0))
                switch (state0) {
                  case 0:
                    t2 = this.angle;
                  case 2:
                    state0 = 0;
                    this.angle = $.add(t2, 6.283185307179586);
                }
              this.x = $.cos(this.angle) * 85;
              this.y = $.sin(this.angle) * 85;
          }
        if (!(t1.get$click() == null))
          t1.addEntity$1($.Bullet$(t1, this.x, this.y, this.angle, t1.get$click()));
    }
  },
  draw$1: function(ctx) {
    var t1, t3, t4, t6, t7;
    ctx.save$0();
    ctx.translate$2(this.x, this.y);
    t1 = this.angle;
    if (typeof t1 !== "number")
      return this.draw$1$bailout(1, ctx, t1);
    ctx.rotate$1(t1 + 1.5707963267948966);
    t3 = this.sprite;
    t4 = t3.get$width();
    if (typeof t4 !== "number")
      return this.draw$1$bailout(2, ctx, t4, t3);
    t6 = -t4 / 2;
    t7 = this.sprite.get$height();
    if (typeof t7 !== "number")
      return this.draw$1$bailout(3, ctx, t6, t3, t7);
    ctx.drawImage$3(t3, t6, -t7 / 2);
    ctx.restore$0();
    $.GameEntity.prototype.draw$1.call(this, ctx);
  },
  draw$1$bailout: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        t1 = env1;
        ctx = env0;
        break;
      case 2:
        t3 = env2;
        t4 = env1;
        ctx = env0;
        break;
      case 3:
        t7 = env3;
        t3 = env2;
        t6 = env1;
        ctx = env0;
        break;
    }
    switch (state0) {
      case 0:
        ctx.save$0();
        ctx.translate$2(this.x, this.y);
        t1 = this.angle;
      case 1:
        state0 = 0;
        ctx.rotate$1($.add(t1, 1.5707963267948966));
        t3 = this.sprite;
        t4 = t3.get$width();
      case 2:
        state0 = 0;
        t6 = $.div($.neg(t4), 2);
        t7 = this.sprite.get$height();
      case 3:
        var t1, ctx, t3, t4, t6, t7;
        state0 = 0;
        ctx.drawImage$3(t3, t6, $.div($.neg(t7), 2));
        ctx.restore$0();
        $.GameEntity.prototype.draw$1.call(this, ctx);
    }
  },
  Sentry$1: function(game) {
    this.sprite = game.get$assetManager().getAsset$1("img/sentry.png");
    this.radius = $.div(this.sprite.get$width(), 2);
  }
};

$$.Bullet = {"": "GameEntity;angle,explodesAt,radialDistance,animation,game,x,y,removeFromWorld,sprite,radius",
  update$0: function() {
    var t1, t3, t4, t2;
    if (this.outsideScreen$0() === true)
      this.removeFromWorld = true;
    else {
      t1 = this.x;
      t1 = $.getInterceptor$JSNumber(t1).abs$0(t1);
      if (typeof t1 !== "number")
        return this.update$0$bailout0(1, t1);
      t3 = this.explodesAt;
      t4 = t3.get$x();
      t4 = $.getInterceptor$JSNumber(t4).abs$0(t4);
      if (typeof t4 !== "number")
        return this.update$0$bailout0(2, t4, t1, t3);
      if (!(t1 >= t4)) {
        t1 = this.y;
        t1 = $.getInterceptor$JSNumber(t1).abs$0(t1);
        if (typeof t1 !== "number")
          return this.update$0$bailout0(3, t1, t3);
        t4 = t3.get$y();
        t4 = $.getInterceptor$JSNumber(t4).abs$0(t4);
        if (typeof t4 !== "number")
          return this.update$0$bailout0(4, t1, t4, t3);
        t4 = t1 >= t4;
        t1 = t4;
      } else
        t1 = true;
      t2 = this.game;
      if (t1) {
        t2.addEntity$1($.BulletExplosion$(t2, t3.get$x(), t3.get$y()));
        this.removeFromWorld = true;
      } else {
        this.x = this.radialDistance * $.cos(this.angle);
        this.y = this.radialDistance * $.sin(this.angle);
        t1 = this.radialDistance;
        t2 = t2.get$clockTick();
        if (typeof t2 !== "number")
          throw $.iae(t2);
        this.radialDistance = t1 + 250 * t2;
      }
    }
  },
  update$0$bailout0: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        t1 = env0;
        break;
      case 2:
        t3 = env2;
        t1 = env1;
        t4 = env0;
        break;
      case 3:
        t3 = env1;
        t1 = env0;
        break;
      case 4:
        t3 = env2;
        t4 = env1;
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
      default:
        var t1, t3, t4, t2;
        if (state0 === 0 && this.outsideScreen$0() === true)
          this.removeFromWorld = true;
        else
          switch (state0) {
            case 0:
              t1 = this.x;
              t1 = $.getInterceptor$JSNumber(t1).abs$0(t1);
            case 1:
              state0 = 0;
              t3 = this.explodesAt;
              t4 = t3.get$x();
              t4 = $.getInterceptor$JSNumber(t4).abs$0(t4);
            case 2:
              state0 = 0;
            default:
              if (state0 === 4 || state0 === 3 || state0 === 0 && !$.geB(t1, t4))
                switch (state0) {
                  case 0:
                    t1 = this.y;
                    t1 = $.getInterceptor$JSNumber(t1).abs$0(t1);
                  case 3:
                    state0 = 0;
                    t4 = t3.get$y();
                    t4 = $.getInterceptor$JSNumber(t4).abs$0(t4);
                  case 4:
                    state0 = 0;
                    t4 = $.geB(t1, t4);
                    t1 = t4;
                }
              else
                t1 = true;
              t2 = this.game;
              if (t1) {
                t2.addEntity$1($.BulletExplosion$(t2, t3.get$x(), t3.get$y()));
                this.removeFromWorld = true;
              } else {
                this.x = this.radialDistance * $.cos(this.angle);
                this.y = this.radialDistance * $.sin(this.angle);
                t1 = this.radialDistance;
                t2 = t2.get$clockTick();
                if (typeof t2 !== "number")
                  throw $.iae(t2);
                this.radialDistance = t1 + 250 * t2;
              }
          }
    }
  },
  draw$1: function(ctx) {
    var t1, t3, t5;
    ctx.save$0();
    ctx.translate$2(this.x, this.y);
    t1 = this.angle;
    if (typeof t1 !== "number")
      return this.draw$1$bailout1(1, ctx, t1);
    ctx.rotate$1(t1 + 1.5707963267948966);
    t3 = this.x;
    if (typeof t3 !== "number")
      return this.draw$1$bailout1(2, ctx, t3);
    t3 = -t3;
    t5 = this.y;
    if (typeof t5 !== "number")
      return this.draw$1$bailout1(3, ctx, t3, t5);
    ctx.translate$2(t3, -t5);
    this.animation.drawFrame$4(this.game.get$clockTick(), ctx, this.x, this.y);
    ctx.restore$0();
    $.GameEntity.prototype.draw$1.call(this, ctx);
  },
  draw$1$bailout1: function(state0, env0, env1, env2) {
    switch (state0) {
      case 1:
        t1 = env1;
        ctx = env0;
        break;
      case 2:
        t3 = env1;
        ctx = env0;
        break;
      case 3:
        t5 = env2;
        t3 = env1;
        ctx = env0;
        break;
    }
    switch (state0) {
      case 0:
        ctx.save$0();
        ctx.translate$2(this.x, this.y);
        t1 = this.angle;
      case 1:
        state0 = 0;
        ctx.rotate$1($.add(t1, 1.5707963267948966));
        t3 = this.x;
      case 2:
        state0 = 0;
        t3 = $.neg(t3);
        t5 = this.y;
      case 3:
        var t1, ctx, t3, t5;
        state0 = 0;
        ctx.translate$2(t3, $.neg(t5));
        this.animation.drawFrame$4(this.game.get$clockTick(), ctx, this.x, this.y);
        ctx.restore$0();
        $.GameEntity.prototype.draw$1.call(this, ctx);
    }
  },
  Bullet$5: function(game, x, y, angle, explodesAt) {
    this.sprite = game.get$assetManager().getAsset$1("img/bullet.png");
    this.animation = $.Animation$(this.sprite, 7, 0.05, true);
  }
};

$$.BulletExplosion = {"": "GameEntity;animation,game,x,y,removeFromWorld,sprite,radius",
  update$0: function() {
    var t1, t2, i, alien;
    if (this.animation.isDone$0() === true) {
      this.removeFromWorld = true;
      return;
    }
    t1 = this.animation;
    t2 = t1.frameWidth;
    if (typeof t2 !== "number")
      return this.update$0$bailout1(1, t2);
    t2 /= 2;
    t1 = t1.currentFrame$0();
    if (typeof t1 !== "number")
      return this.update$0$bailout1(2, t2, t1);
    this.radius = t2 * (1 + t1 / 3);
    t1 = this.game;
    i = 0;
    while (true) {
      t2 = t1.get$entities();
      t2 = $.getInterceptor$JSStringJSArray(t2).get$length(t2);
      if (typeof t2 !== "number")
        return this.update$0$bailout1(3, i, t1, t2);
      if (!(i < t2))
        break;
      t2 = t1.get$entities();
      if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
        return this.update$0$bailout1(4, i, t2, t1);
      if (i >= t2.length)
        throw $.ioore(i);
      alien = t2[i];
      if (typeof alien === "object" && alien !== null && !!alien.is$Alien && this.isCaughtInExplosion$1(alien) === true) {
        t2 = t1.get$score();
        if (typeof t2 !== "number")
          return this.update$0$bailout1(5, i, t1, alien, t2);
        t1.set$score(t2 + 10);
        alien.explode$0();
      }
      ++i;
    }
  },
  update$0$bailout1: function(state0, env0, env1, env2, env3) {
    switch (state0) {
      case 1:
        t1 = env0;
        break;
      case 2:
        t3 = env1;
        t1 = env0;
        break;
      case 3:
        t2 = env2;
        t1 = env1;
        i = env0;
        break;
      case 4:
        t1 = env2;
        t2 = env1;
        i = env0;
        break;
      case 5:
        t2 = env3;
        alien = env2;
        t1 = env1;
        i = env0;
        break;
    }
    switch (state0) {
      case 0:
        if (this.animation.isDone$0() === true) {
          this.removeFromWorld = true;
          return;
        }
        t1 = this.animation.frameWidth;
      case 1:
        state0 = 0;
        t1 = $.div(t1, 2);
        t3 = this.animation.currentFrame$0();
      case 2:
        state0 = 0;
        t3 = $.div(t3, 3);
        if (typeof t3 !== "number")
          throw $.iae(t3);
        this.radius = $.mul(t1, 1 + t3);
        t1 = this.game;
        i = 0;
      default:
        var t1, t3, i, t2, alien;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t2 = t1.get$entities();
                t2 = $.getInterceptor$JSStringJSArray(t2).get$length(t2);
              case 3:
                state0 = 0;
                if (!$.ltB(i, t2))
                  break L0;
                t2 = t1.get$entities();
              case 4:
                state0 = 0;
                alien = $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, i);
              case 5:
                if (state0 === 5 || state0 === 0 && typeof alien === "object" && alien !== null && !!alien.is$Alien && this.isCaughtInExplosion$1(alien) === true)
                  switch (state0) {
                    case 0:
                      t2 = t1.get$score();
                    case 5:
                      state0 = 0;
                      t1.set$score($.add(t2, 10));
                      alien.explode$0();
                  }
                ++i;
            }
    }
  },
  isCaughtInExplosion$1: function(alien) {
    var t1, t3, t5, t6, t8, t10, distance_squared, t12, t14;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.isCaughtInExplosion$1$bailout(1, alien, t1);
    t3 = alien.x;
    if (typeof t3 !== "number")
      return this.isCaughtInExplosion$1$bailout(2, alien, t3, t1);
    t5 = t1 - t3;
    t5 *= t1 - t3;
    t6 = this.y;
    if (typeof t6 !== "number")
      return this.isCaughtInExplosion$1$bailout(5, alien, t6, t5);
    t8 = alien.y;
    if (typeof t8 !== "number")
      return this.isCaughtInExplosion$1$bailout(6, alien, t6, t5, t8);
    t10 = t6 - t8;
    distance_squared = t5 + t10 * (t6 - t8);
    t5 = this.radius;
    if (typeof t5 !== "number")
      return this.isCaughtInExplosion$1$bailout(9, distance_squared, alien, t5);
    t12 = alien.radius;
    if (typeof t12 !== "number")
      return this.isCaughtInExplosion$1$bailout(10, distance_squared, alien, t12, t5);
    t14 = t5 + t12;
    return distance_squared < t14 * (t5 + t12);
  },
  isCaughtInExplosion$1$bailout: function(state0, env0, env1, env2, env3, env4) {
    switch (state0) {
      case 1:
        t1 = env1;
        alien = env0;
        break;
      case 2:
        t1 = env2;
        t3 = env1;
        alien = env0;
        break;
      case 3:
        t3 = env2;
        t1 = env1;
        alien = env0;
        break;
      case 4:
        t3 = env3;
        t6 = env2;
        t1 = env1;
        alien = env0;
        break;
      case 5:
        t3 = env2;
        t8 = env1;
        alien = env0;
        break;
      case 6:
        t10 = env3;
        t3 = env2;
        t8 = env1;
        alien = env0;
        break;
      case 7:
        t8 = env3;
        t3 = env2;
        t10 = env1;
        alien = env0;
        break;
      case 8:
        t13 = env4;
        t8 = env3;
        t3 = env2;
        t10 = env1;
        alien = env0;
        break;
      case 9:
        t3 = env2;
        alien = env1;
        distance_squared = env0;
        break;
      case 10:
        t3 = env3;
        t16 = env2;
        alien = env1;
        distance_squared = env0;
        break;
      case 11:
        t16 = env3;
        alien = env2;
        t3 = env1;
        distance_squared = env0;
        break;
      case 12:
        t16 = env3;
        t19 = env2;
        t3 = env1;
        distance_squared = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = alien.x;
      case 2:
        state0 = 0;
        t3 = $.sub(t1, t3);
        t1 = this.x;
      case 3:
        state0 = 0;
        t6 = alien.x;
      case 4:
        state0 = 0;
        t3 = $.mul(t3, $.sub(t1, t6));
        t8 = this.y;
      case 5:
        state0 = 0;
        t10 = alien.y;
      case 6:
        state0 = 0;
        t10 = $.sub(t8, t10);
        t8 = this.y;
      case 7:
        state0 = 0;
        t13 = alien.y;
      case 8:
        state0 = 0;
        distance_squared = $.add(t3, $.mul(t10, $.sub(t8, t13)));
        t3 = this.radius;
      case 9:
        state0 = 0;
        t16 = alien.radius;
      case 10:
        state0 = 0;
        t16 = $.add(t3, t16);
        t3 = this.radius;
      case 11:
        state0 = 0;
        t19 = alien.radius;
      case 12:
        var t1, alien, t3, t6, t8, t10, t13, distance_squared, t16, t19;
        state0 = 0;
        return $.lt(distance_squared, $.mul(t16, $.add(t3, t19)));
    }
  },
  draw$1: function(ctx) {
    var t1, t2, t3, t4, t5;
    t1 = this.animation;
    t2 = this.game.get$clockTick();
    t3 = this.x;
    t4 = this.y;
    t5 = t1.currentFrame$0();
    if (typeof t5 !== "number")
      return this.draw$1$bailout2(1, ctx, t2, t1, t3, t4, t5);
    t1.drawFrame$5(t2, ctx, t3, t4, 1 + t5 / 3);
    $.GameEntity.prototype.draw$1.call(this, ctx);
  },
  draw$1$bailout2: function(state0, ctx, t2, t1, t3, t4, t5) {
    t5 = $.div(t5, 3);
    if (typeof t5 !== "number")
      throw $.iae(t5);
    t1.drawFrame$5(t2, ctx, t3, t4, 1 + t5);
    $.GameEntity.prototype.draw$1.call(this, ctx);
  },
  BulletExplosion$3: function(game, x, y) {
    this.sprite = game.get$assetManager().getAsset$1("img/explosion.png");
    this.animation = $.Animation$(this.sprite, 34, 0.05, false);
    this.radius = $.div(this.animation.frameWidth, 2);
  }
};

$$.Earth = {"": "GameEntity;game,x,y,removeFromWorld,sprite,radius",
  draw$1: function(ctx) {
    var t1, t2, t4, t6, t8;
    t1 = this.sprite;
    t2 = this.x;
    if (typeof t2 !== "number")
      return this.draw$1$bailout0(1, ctx, t1, t2);
    t4 = t1.get$width();
    if (typeof t4 !== "number")
      return this.draw$1$bailout0(2, ctx, t4, t1, t2);
    t2 -= t4 / 2;
    t6 = this.y;
    if (typeof t6 !== "number")
      return this.draw$1$bailout0(3, ctx, t6, t2, t1);
    t8 = this.sprite.get$height();
    if (typeof t8 !== "number")
      return this.draw$1$bailout0(4, ctx, t6, t2, t1, t8);
    ctx.drawImage$3(t1, t2, t6 - t8 / 2);
  },
  draw$1$bailout0: function(state0, env0, env1, env2, env3, env4) {
    switch (state0) {
      case 1:
        t2 = env2;
        t1 = env1;
        ctx = env0;
        break;
      case 2:
        t2 = env3;
        t1 = env2;
        t4 = env1;
        ctx = env0;
        break;
      case 3:
        t1 = env3;
        t2 = env2;
        t6 = env1;
        ctx = env0;
        break;
      case 4:
        t8 = env4;
        t1 = env3;
        t2 = env2;
        t6 = env1;
        ctx = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this.sprite;
        t2 = this.x;
      case 1:
        state0 = 0;
        t4 = t1.get$width();
      case 2:
        state0 = 0;
        t2 = $.sub(t2, $.div(t4, 2));
        t6 = this.y;
      case 3:
        state0 = 0;
        t8 = this.sprite.get$height();
      case 4:
        var t1, t2, ctx, t4, t6, t8;
        state0 = 0;
        ctx.drawImage$3(t1, t2, $.sub(t6, $.div(t8, 2)));
    }
  },
  Earth$1: function(game) {
    this.sprite = game.get$assetManager().getAsset$1("img/earth.png");
  }
};

$$.EvilAliens = {"": "Game;lives=,score=,sentry,earth,lastAlienAddedAt,random,entities,ctx,click,mouse,timer,clockTick,surfaceWidth,surfaceHeight,halfSurfaceWidth,halfSurfaceHeight,clientBoundingRect,assetManager,showOutlines",
  start$0: function() {
    this.sentry = $.Sentry$(this);
    this.earth = $.Earth$(this);
    this.addEntity$1(this.earth);
    this.addEntity$1(this.sentry);
    $.Game.prototype.start$0.call(this);
  },
  update$0: function() {
    var t1, t2, t3;
    t1 = this.lastAlienAddedAt;
    if (!(t1 == null)) {
      t2 = this.timer.gameTime;
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t3 = t2 - t1 > 1;
      t1 = t3;
    } else
      t1 = true;
    if (t1) {
      t1 = this.ctx.get$canvas().get$width();
      t2 = this.random.nextDouble$0();
      if (typeof t2 !== "number")
        return this.update$0$bailout2(1, t2, t1);
      this.addEntity$1($.Alien$(this, t1, t2 * 3.141592653589793 * 180));
      this.lastAlienAddedAt = this.timer.gameTime;
    }
    t1 = this.score;
    if (typeof t1 !== "number")
      return this.update$0$bailout2(2, t1);
    if (t1 <= 0)
      ;
    $.Game.prototype.update$0.call(this);
  },
  update$0$bailout2: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        t1 = env1;
        t2 = env0;
        break;
      case 2:
        t1 = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this.lastAlienAddedAt;
        if (!(t1 == null)) {
          t2 = this.timer.gameTime;
          if (typeof t1 !== "number")
            throw $.iae(t1);
          t3 = t2 - t1 > 1;
          t1 = t3;
        } else
          t1 = true;
      case 1:
        if (state0 === 1 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              t1 = this.ctx.get$canvas().get$width();
              t2 = this.random.nextDouble$0();
            case 1:
              state0 = 0;
              this.addEntity$1($.Alien$(this, t1, $.mul($.mul(t2, 3.141592653589793), 180)));
              this.lastAlienAddedAt = this.timer.gameTime;
          }
        t1 = this.score;
      case 2:
        var t1, t2, t3;
        state0 = 0;
        if ($.leB(t1, 0))
          ;
        $.Game.prototype.update$0.call(this);
    }
  },
  drawBeforeCtxRestore$0: function() {
    this.drawScore$0();
    this.drawLives$0();
  },
  drawLives$0: function() {
    this.ctx.set$fillStyle("red");
    this.ctx.set$font("bold 2em Arial");
    this.ctx.fillText$3("Lives: " + $.S(this.lives), $.add($.div($.neg(this.ctx.get$canvas().get$width()), 2), 50), $.sub($.div(this.ctx.get$canvas().get$height(), 2), 80));
  },
  drawScore$0: function() {
    this.ctx.set$fillStyle("red");
    this.ctx.set$font("bold 2em Arial");
    this.ctx.fillText$3("Score: " + $.S(this.score), $.add($.div($.neg(this.ctx.get$canvas().get$width()), 2), 50), $.sub($.div(this.ctx.get$canvas().get$height(), 2), 50));
  }
};

$$.BodyElementEvents = {"": "ElementEvents;_ptr",
  get$error: function() {
    return this.operator$index$1("error");
  },
  get$load: function() {
    return this.operator$index$1("load");
  }
};

$$.DocumentEvents = {"": "ElementEvents;_ptr"};

$$.ElementEvents = {"": "Events;_ptr",
  get$click: function() {
    return this.operator$index$1("click");
  },
  get$error: function() {
    return this.operator$index$1("error");
  },
  get$load: function() {
    return this.operator$index$1("load");
  },
  get$mouseMove: function() {
    return this.operator$index$1("mousemove");
  }
};

$$.Events = {"": "Object;_ptr",
  operator$index$1: function(type) {
    return $.EventListenerList$(this._ptr, type);
  }
};

$$.EventListenerList = {"": "Object;_ptr,_type",
  add$2: function(listener, useCapture) {
    this._ptr.$$dom_addEventListener$3(this._type, listener, useCapture);
    return this;
  },
  add$1: function(listener) {
    return this.add$2(listener, false);
  }
};

$$.FrameSetElementEvents = {"": "ElementEvents;_ptr",
  get$error: function() {
    return this.operator$index$1("error");
  },
  get$load: function() {
    return this.operator$index$1("load");
  }
};

$$.InputElementEvents = {"": "ElementEvents;_ptr"};

$$.MediaElementEvents = {"": "ElementEvents;_ptr"};

$$.WindowEvents = {"": "Events;_ptr",
  get$click: function() {
    return this.operator$index$1("click");
  },
  get$error: function() {
    return this.operator$index$1("error");
  },
  get$load: function() {
    return this.operator$index$1("load");
  },
  get$mouseMove: function() {
    return this.operator$index$1("mousemove");
  }
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  get$top: function() {
    return $._DOMWindowCrossFrame__createSafe(this._window.top);
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextPosition = t1 + 1;
    t1 = this._length;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(2, t1, nextPosition);
    if (nextPosition < t1) {
      t1 = this._array;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout(3, nextPosition, t1);
      if (nextPosition !== (nextPosition | 0))
        throw $.iae(nextPosition);
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._current = t1[nextPosition];
      this._position = nextPosition;
      return true;
    }
    this._current = null;
    this._position = t1;
    return false;
  },
  moveNext$0$bailout: function(state0, env0, env1) {
    switch (state0) {
      case 1:
        t1 = env0;
        break;
      case 2:
        nextPosition = env1;
        t1 = env0;
        break;
      case 3:
        t1 = env1;
        nextPosition = env0;
        break;
    }
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        nextPosition = $.add(t1, 1);
        t1 = this._length;
      case 2:
        state0 = 0;
      case 3:
        var t1, nextPosition;
        if (state0 === 3 || state0 === 0 && $.ltB(nextPosition, t1))
          switch (state0) {
            case 0:
              t1 = this._array;
            case 3:
              state0 = 0;
              this._current = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, nextPosition);
              this._position = nextPosition;
              return true;
          }
        this._current = null;
        this._position = t1;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$._Random = {"": "Object;",
  nextDouble$0: function() {
    return Math.random();
  }
};

$$.main_anon = {"": "Closure;ctx_0,game_1",
  call$0: function() {
    var t1 = this.game_1;
    t1.init$1(this.ctx_0);
    t1.start$0();
  }
};

$$.AssetManager_downloadAll_anon = {"": "Closure;this_0,downloadCallback_1,img_2",
  call$1: function(event$) {
    var t1, t2;
    $.print($.S(this.img_2.get$src()) + " is loaded");
    t1 = this.this_0;
    t1.set$successCount($.add(t1.get$successCount(), 1));
    t2 = t1.get$downloadQueue();
    if ($.eqB($.getInterceptor$JSStringJSArray(t2).get$length(t2), $.add(t1.get$successCount(), t1.get$errorCount())))
      this.downloadCallback_1.call$0();
  }
};

$$.AssetManager_downloadAll_anon0 = {"": "Closure;this_3,downloadCallback_4",
  call$1: function(event$) {
    var t1, t2;
    t1 = this.this_3;
    t1.set$errorCount($.add(t1.get$errorCount(), 1));
    t2 = t1.get$downloadQueue();
    if ($.eqB($.getInterceptor$JSStringJSArray(t2).get$length(t2), $.add(t1.get$successCount(), t1.get$errorCount())))
      this.downloadCallback_4.call$0();
  }
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
};

$$.Maps__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (t1.first_0 !== true) {
      t2 = this.result_1;
      $.getInterceptor$JSArray(t2).add$1(t2, ", ");
    }
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.Collections__emitObject(k, t1, t2);
    $.getInterceptor$JSArray(t1).add$1(t1, ": ");
    $.Collections__emitObject(v, t1, t2);
  }
};

$$._LinkedHashMapImpl_forEach_anon = {"": "Closure;f_0",
  call$1: function(entry) {
    this.f_0.call$2(entry.get$key(), entry.get$value());
  }
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1, t2;
    t1 = this.box_0;
    if ($.gtB(t1.i_1, 0)) {
      t2 = t1.sb_0;
      $.getInterceptor$JSArray(t2).add$1(t2, ", ");
    }
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, key);
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, ": ");
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, $.Error_safeToString(value));
    t1.i_1 = $.add(t1.i_1, 1);
  }
};

$$._DateImpl_toString_fourDigits = {"": "Closure;",
  call$1: function(n) {
    var absN, sign;
    absN = $.getInterceptor$JSNumber(n).abs$0(n);
    sign = $.ltB(n, 0) ? "-" : "";
    if ($.geB(absN, 1000))
      return $.S(n);
    if ($.geB(absN, 100))
      return sign + "0" + $.S(absN);
    if ($.geB(absN, 10))
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  }
};

$$._DateImpl_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.geB(n, 100))
      return $.S(n);
    if ($.geB(n, 10))
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
};

$$._DateImpl_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.geB(n, 10))
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.Game_startInput_getXandY = {"": "Closure;this_0",
  call$1: function(e) {
    var t1, t2;
    t1 = e.get$clientX();
    t2 = this.this_0;
    return $.GamePoint$($.sub($.sub(t1, t2.get$clientBoundingRect().get$x()), $.div(t2.get$ctx().get$canvas().get$width(), 2)), $.sub($.sub(e.get$clientY(), t2.get$clientBoundingRect().get$y()), $.div(t2.get$ctx().get$canvas().get$height(), 2)));
  }
};

$$.Game_startInput_anon = {"": "Closure;this_1,getXandY_2",
  call$1: function(e) {
    var t1 = this.getXandY_2.call$1(e);
    this.this_1.set$click(t1);
  }
};

$$.Game_startInput_anon0 = {"": "Closure;this_3,getXandY_4",
  call$1: function(e) {
    var t1 = this.getXandY_4.call$1(e);
    this.this_3.set$mouse(t1);
  }
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  }
};

$$.BoundClosure = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};
$$.BoundClosure0 = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  }
};
$.Alien$ = function(game, radialDistance, angle) {
  var t1 = new $.Alien(radialDistance, angle, 100, game, null, null, false, null, null);
  t1.Alien$3(game, radialDistance, angle);
  return t1;
};

$.AlienExplosion$ = function(game, x, y) {
  var t1 = new $.AlienExplosion(null, game, x, y, false, null, null);
  t1.AlienExplosion$3(game, x, y);
  return t1;
};

$.Animation$ = function(spriteSheet, frameWidth, frameDuration, loop) {
  var t1 = new $.Animation(spriteSheet, frameWidth, null, frameDuration, null, loop, 0);
  t1.Animation$4$loop(spriteSheet, frameWidth, frameDuration, loop);
  return t1;
};

$.AssetManager$ = function() {
  return new $.AssetManager(0, 0, $.makeLiteralMap([]), []);
};

$.main = function() {
  var ctx, assetManager;
  ctx = $.query("#surface").get$context2d();
  assetManager = $.AssetManager$();
  assetManager.queueDownload$1("img/alien-explosion.png");
  assetManager.queueDownload$1("img/alien.png");
  assetManager.queueDownload$1("img/bullet.png");
  assetManager.queueDownload$1("img/earth.png");
  assetManager.queueDownload$1("img/sentry.png");
  assetManager.queueDownload$1("img/explosion.png");
  assetManager.downloadAll$1(new $.main_anon(ctx, $.EvilAliens$(assetManager)));
};

$.Bullet$ = function(game, x, y, angle, explodesAt) {
  var t1 = new $.Bullet(angle, explodesAt, 95, null, game, x, y, false, null, null);
  t1.Bullet$5(game, x, y, angle, explodesAt);
  return t1;
};

$.BulletExplosion$ = function(game, x, y) {
  var t1 = new $.BulletExplosion(null, game, x, y, false, null, null);
  t1.BulletExplosion$3(game, x, y);
  return t1;
};

$.Earth$ = function(game) {
  var t1 = new $.Earth(game, 0, 0, false, null, null);
  t1.Earth$1(game);
  return t1;
};

$.EvilAliens$ = function(assetManager) {
  return new $.EvilAliens(10, 0, null, null, null, $.Random_Random(null), [], null, null, null, $.Timer$(), null, null, null, null, null, null, assetManager, false);
};

$.GamePoint$ = function(x, y) {
  return new $.GamePoint(x, y);
};

$.Sentry$ = function(game) {
  var t1 = new $.Sentry(0, game, 0, 85, false, null, null);
  t1.Sentry$1(game);
  return t1;
};

$.Timer$ = function() {
  return new $.Timer(0, 0);
};

$.Strings__toJsStringArray = function(strings) {
  var length$, i, string;
  if (typeof strings !== "object" || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  if (!$.isJsArray(strings))
    strings = $.List_List$from(strings);
  length$ = strings.length;
  for (i = 0; i < length$; ++i) {
    if (i >= strings.length)
      throw $.ioore(i);
    string = strings[i];
    if (!(typeof string === "string"))
      throw $.$$throw($.ArgumentError$(string));
  }
  return strings;
};

$.Strings__toJsStringArray$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      strings = env0;
      break;
    case 2:
      length$ = env2;
      t1 = env1;
      strings = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.checkNull(strings);
      if (!$.isJsArray(strings))
        strings = $.List_List$from(strings);
      t1 = $.getInterceptor$JSStringJSArray(strings);
      length$ = t1.get$length(strings);
    case 2:
      var strings, t1, length$, i, string;
      state0 = 0;
      for (i = 0; $.ltB(i, length$); ++i) {
        string = t1.operator$index$1(strings, i);
        if (!(typeof string === "string"))
          throw $.$$throw($.ArgumentError$(string));
      }
      return strings;
  }
};

$._ArrayIterator$ = function(_list) {
  return new $._ArrayIterator(_list, -1, null);
};

$.add = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a - b : $.sub$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a > b : $.gt$slow(a, b);
};

$.ge = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a >= b : $.ge$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a < b : $.lt$slow(a, b);
};

$.le = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a <= b : $.le$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a < b : $.lt$slow(a, b) === true;
};

$.leB = function(a, b) {
  return typeof a === "number" && typeof b === "number" ? a <= b : $.le$slow(a, b) === true;
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === "number")
    if (typeof b === "number")
      return true;
    else
      throw $.$$throw($.ArgumentError$(b));
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.CONSTANT4.truncate$0(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.operator$negate$0();
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, "indexed set");
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.getInterceptor(value).toString$0(value);
  if (!(typeof res === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled, t1;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      name$ = decompiled;
  }
  t1 = $.getInterceptor$JSString(name$);
  return $.Primitives_identical(t1.charCodeAt$1(name$, 0), 36) ? t1.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.Primitives_newGrowableList = function(length$) {
  return new Array(length$);
};

$.Primitives_newFixedList = function(length$) {
  var result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.Primitives_identical = function(a, b) {
  return a == null ? b == null : a === b;
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CONSTANT;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  var t1 = this.dartException;
  return $.getInterceptor(t1).toString$0(t1);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") !== -1 || $.eqB(type, "property_not_function") || $.eqB(type, "called_non_callable") || $.eqB(type, "non_object_property_call") || $.eqB(type, "non_object_property_load"))
      return $.NoSuchMethodError$(null, name$, [], $.makeLiteralMap([]), null);
    else if ($.eqB(type, "undefined_method"))
      return $.NoSuchMethodError$("", name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === "string")
      if ($.CONSTANT0.endsWith$1(message, "is null") === true || $.CONSTANT0.endsWith$1(message, "is undefined") === true || $.CONSTANT0.endsWith$1(message, "is null or undefined") === true || $.CONSTANT0.endsWith$1(message, "of null") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(typeof message === "string" ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.CONSTANT1.get$iterator(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    $.indexSet(result, key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return new $.invokeClosure_anon(closure).call$0();
  else if ($.eqB(numberOfArguments, 1))
    return new $.invokeClosure_anon0(closure, arg1).call$0();
  else if ($.eqB(numberOfArguments, 2))
    return new $.invokeClosure_anon1(closure, arg1, arg2).call$0();
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  $;
  function$ = function(a, b) { return $.invokeClosure.call$5(closure, $, arity, a, b); };
  closure.$identity = function$;
  return function$;
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var name$ = tag;
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  return name$;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "GeoGeolocation")
    return "Geolocation";
  if (name$ === "MouseScrollEvent")
    return "WheelEvent";
  if (name$ === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name$ === "WorkerMessageEvent")
    return "MessageEvent";
  if (name$ === "XMLDocument")
    return "Document";
  return name$;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "HTMLDDElement")
    return "HTMLElement";
  if (name$ === "HTMLDTElement")
    return "HTMLElement";
  if (name$ === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLPhraseElement")
    return "HTMLElement";
  if (name$ === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name$ === "MouseWheelEvent")
    return "WheelEvent";
  if (name$ === "Position")
    return "Geoposition";
  if (name$ === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return name$;
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return "Null";
  constructor$ = object.constructor;
  if (typeof(constructor$) === "function") {
    name$ = constructor$.name;
    if (typeof name$ === "string")
      t1 = !(name$ === "") && !(name$ === "Object") && !(name$ === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function(function$, object, property) {
  return function$.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT7));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT7)[name$];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined") {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, isMultiLine, isCaseSensitive, sb, t1, t2, e;
  pattern = regExp.get$pattern();
  isMultiLine = regExp.get$isMultiLine();
  isCaseSensitive = regExp.get$isCaseSensitive();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (isMultiLine === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "m");
  }
  if (isCaseSensitive !== true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "i");
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "g");
  }
  try {
    t1 = pattern;
    t2 = sb;
    t1 = new RegExp(t1, $.getInterceptor(t2).toString$0(t2));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive);
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, t1, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length$ = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), true, false), true), to);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.indexSet(dst, j, src[i]);
    }
  else
    for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.indexSet(dst, j, src[i]);
    }
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).get$iterator(iterable); t1.moveNext$0() === true;)
    f.call$1(t1.get$current());
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer("");
  $.Collections__emitCollection(c, result, $.List_List(0));
  return $.getInterceptor(result).toString$0(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.is$List());
  t2 = $.getInterceptor$JSArray(result);
  t2.add$1(result, isList ? "[" : "{");
  for (t3 = $.getInterceptor$JSArray(c).get$iterator(c), first = true; t3.moveNext$0() === true; first = false) {
    t4 = t3.get$current();
    if (!first)
      t2.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t2.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, typeof o === "object" && o !== null && (o.constructor === Array || o.is$List()) ? "[...]" : "{...}");
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor$JSArray(result).add$1(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor$JSArray(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(c).get$iterator(c); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer("");
  $.Maps__emitMap(m, result, $.List_List(0));
  return $.getInterceptor(result).toString$0(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.getInterceptor$JSArray(m).forEach$1(m, new $.Maps__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.Date_Date$now = function() {
  return $._DateImpl$now();
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $._DateImpl$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$._DateImpl$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $._DateImpl(millisecondsSinceEpoch, isUtc);
  t1._DateImpl$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$._DateImpl$now = function() {
  var t1 = new $._DateImpl($.Primitives_dateNow(), false);
  t1._DateImpl$now$0();
  return t1;
};

$.Error_safeToString = function(object) {
  var t1;
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.getInterceptor(object).toString$0(object);
  if (typeof object === "string") {
    t1 = $.CONSTANT0.replaceAll$2(object, "\\", "\\\\");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\\n");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\r", "\\r");
    return "\"" + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\"", "\\\"")) + "\"";
  }
  return $.Primitives_objectToString(object);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.List_List = function(length$) {
  if (!(typeof length$ === "number" && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($.Error_safeToString(length$)) + "."));
  return $.Primitives_newGrowableList(length$);
};

$.List_List$fixedLength = function(length$, fill) {
  var result, t1, i;
  if (!(typeof length$ === "number" && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S(length$) + "."));
  result = $.Primitives_newFixedList(length$);
  if (typeof result !== "object" || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.is$JavaScriptIndexingBehavior())
    return $.List_List$fixedLength$bailout(1, length$, fill, result);
  if (!$.eqB(length$, 0) && !(fill == null))
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
};

$.List_List$fixedLength$bailout = function(state0, length$, fill, result) {
  var i;
  if (!$.eqB(length$, 0) && !(fill == null))
    for (i = 0; i < result.length; ++i)
      $.indexSet(result, i, fill);
  return result;
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(0);
  for (t1 = $.getInterceptor$JSArray(other).get$iterator(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  return list;
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$._HashMapImplIndexIterator$ = function(map) {
  return new $._HashMapImplIndexIterator(map, -1, null);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.print = function(object) {
  $.Primitives_printString(object);
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(sentinel) {
  return new $._DoubleLinkedQueueIterator(sentinel, sentinel, null);
};

$.RegExp_RegExp = function(pattern, caseSensitive, multiLine) {
  return $.JSSyntaxRegExp$(pattern, caseSensitive, multiLine);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.query = function(selector) {
  return $.document().query$1(selector);
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$.CanvasElement_CanvasElement = function(height, width) {
  var e = $.document().$$dom_createElement$1("canvas");
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$.ImageElement_ImageElement = function(height, src, width) {
  var e = $.document().$$dom_createElement$1("img");
  if (!(src == null))
    e.set$src(src);
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.WindowEvents$ = function(_ptr) {
  return new $.WindowEvents(_ptr);
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator(array, $.getInterceptor$JSStringJSArray(array).get$length(array), -1, null);
};

$.min = function(a, b) {
  if (typeof a === "number") {
    if (a > b)
      return b;
    if (a < b)
      return a;
    if (typeof a === "number")
      if (a === 0)
        return (a + b) * a * b;
    if (a === 0 && $.CONSTANT6.get$isNegative(b) === true || $.CONSTANT6.get$isNaN(b) === true)
      return b;
    return a;
    return a;
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.max = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return a + b;
        if ($.CONSTANT6.get$isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.CONSTANT4.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.atan2 = function(a, b) {
  return Math.atan2($.checkNum(a), $.checkNum(b));
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.Random_Random = function(seed) {
  return $.CONSTANT5;
};

$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
Isolate.$finishClasses($$);
$$ = {};
$.$int = {builtin$cls: '$int'};
$.String = {builtin$cls: 'String'};
$.Node = {builtin$cls: 'Node'};
$.CONSTANT5 = new Isolate.$isolateProperties._Random();
$.CONSTANT0 = new Isolate.$isolateProperties.JSString();
$.CONSTANT = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT7 = new Isolate.$isolateProperties.Object();
$.CONSTANT6 = new Isolate.$isolateProperties.JSDouble();
$.CONSTANT3 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT1 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT4 = new Isolate.$isolateProperties.JSNumber();
$.CONSTANT2 = new Isolate.$isolateProperties.JSInt();
$.Primitives_hashCodeSeed = 0;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$._DateImpl__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$.PI = 3.141592653589793;
$._getTypeNameOf = null;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CONSTANT3;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", true, false);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {        if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  is$JavaScriptIndexingBehavior: function() {
    return false;
  },
  is$Collection: function() {
    return false;
  },
  is$List: function() {
    return false;
  },
  is$Map: function() {
    return false;
  },
  toString$0: function() {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function() {
    return $.hashCodeForNativeObject(this);
  }
});

$.$defineNativeClass("HTMLAnchorElement", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLAppletElement", {"": "height=,width="});

$.$defineNativeClass("Attr", {"": "value="});

$.$defineNativeClass("HTMLBodyElement", {
  get$on: function() {
    return $.BodyElementEvents$(this);
  }
});

$.$defineNativeClass("HTMLButtonElement", {"": "value="});

$.$defineNativeClass("HTMLCanvasElement", {"": "height=,width=",
  getContext$1: function(contextId) {
    return this.getContext(contextId);
  },
  get$context2d: function() {
    return this.getContext$1("2d");
  }
});

$.$defineNativeClass("CanvasRenderingContext", {"": "canvas>"});

$.$defineNativeClass("CanvasRenderingContext2D", {"": "fillStyle<,font<,strokeStyle<",
  arc$6: function(x, y, radius, startAngle, endAngle, anticlockwise) {
    return this.arc(x,y,radius,startAngle,endAngle,anticlockwise);
  },
  beginPath$0: function() {
    return this.beginPath();
  },
  clearRect$4: function(x, y, width, height) {
    return this.clearRect(x,y,width,height);
  },
  closePath$0: function() {
    return this.closePath();
  },
  drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
    return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
  },
  drawImage$3: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y) {
    return this.drawImage(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y);
  },
  fillText$4: function(text, x, y, maxWidth) {
    return this.fillText(text,x,y,maxWidth);
  },
  fillText$3: function(text, x, y) {
    return this.fillText(text, x, y);
  },
  restore$0: function() {
    return this.restore();
  },
  rotate$1: function(angle) {
    return this.rotate(angle);
  },
  save$0: function() {
    return this.save();
  },
  stroke$0: function() {
    return this.stroke();
  },
  translate$2: function(tx, ty) {
    return this.translate(tx,ty);
  }
});

$.$defineNativeClass("CharacterData", {"": "length>",
  remove$0: function() {
    return this.remove();
  }
});

$.$defineNativeClass("ClientRect", {"": "height>,left>,top>,width>"});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length>",
  _getPropertyValue$1: function(propertyName) {
    return this.getPropertyValue(propertyName);
  },
  getPropertyValue$1: function(propertyName) {
    var propValue = this._getPropertyValue$1(propertyName);
    return !(propValue == null) ? propValue : "";
  },
  setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    if (!!this.setAttribute)
      this.setAttribute(propertyName, value);
  },
  get$clear: function() {
    return this.getPropertyValue$1("clear");
  },
  clear$0: function() {
    return this.get$clear().call$0();
  },
  set$font: function(value) {
    this.setProperty$3("font", value, "");
  },
  get$height: function() {
    return this.getPropertyValue$1("height");
  },
  set$height: function(value) {
    this.setProperty$3("height", value, "");
  },
  get$left: function() {
    return this.getPropertyValue$1("left");
  },
  get$src: function() {
    return this.getPropertyValue$1("src");
  },
  set$src: function(value) {
    this.setProperty$3("src", value, "");
  },
  get$top: function() {
    return this.getPropertyValue$1("top");
  },
  get$width: function() {
    return this.getPropertyValue$1("width");
  },
  set$width: function(value) {
    this.setProperty$3("width", value, "");
  }
});

$.$defineNativeClass("Document", {
  get$on: function() {
    return $.DocumentEvents$(this);
  },
  $$dom_createElement$1: function(tagName) {
    return this.createElement(tagName);
  },
  $$dom_getElementById$1: function(elementId) {
    return this.getElementById(elementId);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  query$1: function(selectors) {
    if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", true, false).hasMatch$1(selectors) === true)
      return this.$$dom_getElementById$1($.CONSTANT0.substring$1(selectors, 1));
    return this.$$dom_querySelector$1(selectors);
  }
});

$.$defineNativeClass("DocumentFragment", {
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  get$translate: function() {
    return false;
  },
  translate$2: function(arg0, arg1) {
    return this.get$translate().call$2(arg0, arg1);
  },
  click$0: function() {
  },
  get$click: function() {
    return new $.BoundClosure0(this, "click$0");
  },
  get$on: function() {
    return $.ElementEvents$(this);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  }
});

$.$defineNativeClass("DocumentType", {"": "entities>",
  remove$0: function() {
    return this.remove();
  }
});

$.$defineNativeClass("DOMException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Element", {
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  get$on: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$on")) {
      return $.ElementEvents$(this);
    } else
      return Object.prototype.get$on.call(this);
  },
  translate$2: function(arg0, arg1) {
    return this.translate.call$2(arg0, arg1);
  },
  click$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("click$0")) {
      return this.click();
    } else
      return Object.prototype.click$0.call(this);
  },
  get$click: function() {
    return new $.BoundClosure0(this, "click$0");
  },
  getBoundingClientRect$0: function() {
    return this.getBoundingClientRect();
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  }
});

$.$defineNativeClass("HTMLEmbedElement", {"": "height=,src=,width="});

$.$defineNativeClass("EventException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("EventTarget", {
  get$on: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$on")) {
      return $.Events$(this);
    } else
      return Object.prototype.get$on.call(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
});

$.$defineNativeClass("FileException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length>"});

$.$defineNativeClass("HTMLFrameElement", {"": "height>,src=,width>"});

$.$defineNativeClass("HTMLFrameSetElement", {
  get$on: function() {
    return $.FrameSetElementEvents$(this);
  }
});

$.$defineNativeClass("HTMLCollection", {
  get$length: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return this.length;
    } else
      return Object.prototype.get$length.call(this);
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$length")) {
      throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
    } else
      return Object.prototype.set$length.call(this, value);
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLOptionsCollection", {
  get$length: function() {
    return this.length;
  },
  set$length: function(value) {
    this.length = value;
  }
});

$.$defineNativeClass("XMLHttpRequestException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLIFrameElement", {"": "height=,src=,width="});

$.$defineNativeClass("HTMLImageElement", {"": "height=,src=,width=,x>,y>"});

$.$defineNativeClass("HTMLInputElement", {"": "height=,pattern>,src=,value=,width=",
  get$on: function() {
    return $.InputElementEvents$(this);
  }
});

$.$defineNativeClass("HTMLLIElement", {"": "value="});

$.$defineNativeClass("HTMLMarqueeElement", {"": "height=,width=",
  start$0: function() {
    return this.start();
  }
});

$.$defineNativeClass("HTMLMediaElement", {"": "error>,src=",
  get$on: function() {
    return $.MediaElementEvents$(this);
  },
  load$0: function() {
    return this.load();
  },
  get$load: function() {
    return new $.BoundClosure0(this, "load$0");
  }
});

$.$defineNativeClass("HTMLMeterElement", {"": "value="});

$.$defineNativeClass("MouseEvent", {"": "clientX>,clientY>,x>,y>"});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Node", {
  remove$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$0")) {
      var t1 = this.parentNode;
      if (!(t1 == null))
        t1.$$dom_removeChild$1(this);
    } else
      return Object.prototype.remove$0.call(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeChild$1: function(oldChild) {
    return this.removeChild(oldChild);
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLOListElement", {
  start$0: function() {
    return this.start.call$0();
  }
});

$.$defineNativeClass("HTMLObjectElement", {"": "height=,width="});

$.$defineNativeClass("HTMLOptionElement", {"": "value="});

$.$defineNativeClass("HTMLOutputElement", {"": "value="});

$.$defineNativeClass("HTMLParamElement", {"": "value="});

$.$defineNativeClass("HTMLProgressElement", {"": "value="});

$.$defineNativeClass("RadioNodeList", {"": "value="});

$.$defineNativeClass("RangeException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLScriptElement", {"": "src="});

$.$defineNativeClass("HTMLSelectElement", {"": "length=,value="});

$.$defineNativeClass("HTMLSourceElement", {"": "src="});

$.$defineNativeClass("SpeechRecognitionError", {"": "error>"});

$.$defineNativeClass("Storage", {
  containsKey$1: function(key) {
    return !(this.$$dom_getItem$1(key) == null);
  },
  operator$index$1: function(key) {
    return this.$$dom_getItem$1(key);
  },
  operator$indexSet$2: function(key, value) {
    this.$$dom_setItem$2(key, value);
  },
  clear$0: function() {
    return this.$$dom_clear$0();
  },
  forEach$1: function(f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = this.$$dom_key$1(i);
      if (key == null)
        return;
      f.call$2(key, this.operator$index$1(key));
    }
  },
  get$length: function() {
    return this.length;
  },
  get$isEmpty: function() {
    return this.$$dom_key$1(0) == null;
  },
  $$dom_clear$0: function() {
    return this.clear();
  },
  $$dom_getItem$1: function(key) {
    return this.getItem(key);
  },
  $$dom_key$1: function(index) {
    return this.key(index);
  },
  $$dom_setItem$2: function(key, data) {
    return this.setItem(key,data);
  },
  is$Map: function() {
    return true;
  }
});

$.$defineNativeClass("StorageEvent", {"": "key>"});

$.$defineNativeClass("HTMLTextAreaElement", {"": "value="});

$.$defineNativeClass("HTMLTrackElement", {"": "src="});

$.$defineNativeClass("Uint8Array", {
  get$length: function() {
    return this.length;
  },
  operator$index$1: function(index) {
    return this[index];
  },
  operator$indexSet$2: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    return $.Collections_forEach(this, f);
  },
  get$isEmpty: function() {
    return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  is$List: function() {
    return true;
  },
  is$Collection: function() {
    return true;
  },
  is$JavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLVideoElement", {"": "height=,width="});

$.$defineNativeClass("DOMWindow", {
  requestAnimationFrame$1: function(callback) {
    this._ensureRequestAnimationFrame$0();
    return this._requestAnimationFrame$1(callback);
  },
  _requestAnimationFrame$1: function(callback) {
    return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function() {
    if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
  },
  get$on: function() {
    return $.WindowEvents$(this);
  },
  get$top: function() {
    return $._convertNativeToDart_Window(this.top);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("XPathException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGCursorElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFEBlendElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEColorMatrixElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEComponentTransferElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFECompositeElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEConvolveMatrixElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDiffuseLightingElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDisplacementMapElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDropShadowElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEFloodElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEGaussianBlurElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEImageElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMergeElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMorphologyElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEOffsetElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEPointLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFESpecularLightingElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFESpotLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFETileElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFETurbulenceElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFilterElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGForeignObjectElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGGlyphRefElement", {"": "x>,y>"});

$.$defineNativeClass("SVGImageElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGMaskElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGPatternElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGRectElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGElement", {
  click$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot invoke click SVG."));
  },
  get$click: function() {
    return new $.BoundClosure0(this, "click$0");
  }
});

$.$defineNativeClass("SVGException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGSVGElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGTextPositioningElement", {"": "x>,y>",
  rotate$1: function(arg0) {
    return this.rotate.call$1(arg0);
  }
});

$.$defineNativeClass("SVGUseElement", {"": "height>,width>,x>,y>"});

// 89 dynamic classes.
// 199 classes
// 19 !leaf
(function() {
  var v0_TextPositioningElement = "SVGTextPositioningElement|SVGAltGlyphElement|SVGTSpanElement|SVGTextElement|SVGTRefElement", v1_MediaElement = "HTMLMediaElement|HTMLVideoElement|HTMLAudioElement", v2_SvgElement = [v0_TextPositioningElement, "SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGComponentTransferFunctionElement|SVGFEFuncRElement|SVGFEFuncAElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGClipPathElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEColorMatrixElement|SVGFEConvolveMatrixElement|SVGCursorElement|SVGFEDisplacementMapElement|SVGFEDropShadowElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEDiffuseLightingElement|SVGFEMergeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEImageElement|SVGFEMergeNodeElement|SVGFETurbulenceElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEDistantLightElement|SVGFETileElement|SVGFontFaceFormatElement|SVGFilterElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGFontElement|SVGFEPointLightElement|SVGFEBlendElement|SVGGlyphElement|SVGGElement|SVGFontFaceElement|SVGImageElement|SVGFontFaceNameElement|SVGHKernElement|SVGLineElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGGlyphRefElement|SVGMPathElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGMarkerElement|SVGPathElement|SVGForeignObjectElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement"].join("|"), v3_Element = [v1_MediaElement, v2_SvgElement, "Element|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement"].join("|"), v4_DocumentFragment = "DocumentFragment|ShadowRoot", v5_CharacterData = "CharacterData|Text|CDATASection|Comment", v6_Document = "Document|SVGDocument|HTMLDocument", v7_Node = [v3_Element, v4_DocumentFragment, v5_CharacterData, v6_Document, "Node|ProcessingInstruction|Attr|DocumentType|EntityReference|Notation"].join("|");
  $.dynamicSetMetadata([["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"], ["CanvasRenderingContext", "CanvasRenderingContext|WebGLRenderingContext|CanvasRenderingContext2D"], ["CharacterData", v5_CharacterData], ["HTMLMediaElement", v1_MediaElement], ["Document", v6_Document], ["DocumentFragment", v4_DocumentFragment], ["Uint8Array", "Uint8Array|Uint8ClampedArray"], ["SVGTextPositioningElement", v0_TextPositioningElement], ["SVGElement", v2_SvgElement], ["Element", v3_Element], ["MouseEvent", "MouseEvent|WheelEvent"], ["Node", v7_Node], ["EventTarget", [v7_Node, "EventTarget|DOMWindow"].join("|")], ["NodeList", "NodeList|RadioNodeList"]]);
})();


//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.main(); });
      } else {
        $.main();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.main(); });
  } else {
    $.main();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=BadAliensDart.dart.js.map